{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nconst initialState = {\n  orders: [],\n  loading: false,\n  error: null\n};\nexport const fetchOrders = createAsyncThunk('orders/fetchOrders', async () => {\n  const response = await fetch('/api/orders');\n  return await response.json();\n});\nconst ordersSlice = createSlice({\n  name: 'orders',\n  initialState,\n  reducers: {\n    createOrder(state, action) {\n      state.orders.push(action.payload);\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchOrders.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchOrders.fulfilled, (state, action) => {\n      state.loading = false;\n      state.orders = action.payload;\n    }).addCase(fetchOrders.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  createOrder\n} = ordersSlice.actions;\nexport default ordersSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","initialState","orders","loading","error","fetchOrders","response","fetch","json","ordersSlice","name","reducers","createOrder","state","action","push","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","reducer"],"sources":["C:/Users/balga/OneDrive/Desktop/E-Commerce app/ecommerce-app/src/features/orders/ordersSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction, createAsyncThunk } from '@reduxjs/toolkit';\n\ninterface Order {\n  order_id: string;\n  cart_id: string;\n  user_id: number;\n  status: string;\n  payment_id: string;\n  shipping_id: string;\n  total_xaf: number;\n  created_at: string;\n}\n\ninterface OrdersState {\n  orders: Order[];\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: OrdersState = {\n  orders: [],\n  loading: false,\n  error: null,\n};\n\nexport const fetchOrders = createAsyncThunk('orders/fetchOrders', async () => {\n  const response = await fetch('/api/orders');\n  return (await response.json()) as Order[];\n});\n\nconst ordersSlice = createSlice({\n  name: 'orders',\n  initialState,\n  reducers: {\n    createOrder(state, action: PayloadAction<Order>) {\n      state.orders.push(action.payload);\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchOrders.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchOrders.fulfilled, (state, action: PayloadAction<Order[]>) => {\n        state.loading = false;\n        state.orders = action.payload;\n      })\n      .addCase(fetchOrders.rejected, (state, action: PayloadAction<string>) => {\n        state.loading = false;\n        state.error = action.payload;\n      });\n  },\n});\n\nexport const { createOrder } = ordersSlice.actions;\n\nexport default ordersSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAiBC,gBAAgB,QAAQ,kBAAkB;AAmB/E,MAAMC,YAAyB,GAAG;EAChCC,MAAM,EAAE,EAAE;EACVC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGL,gBAAgB,CAAC,oBAAoB,EAAE,YAAY;EAC5E,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,CAAC;EAC3C,OAAQ,MAAMD,QAAQ,CAACE,IAAI,CAAC,CAAC;AAC/B,CAAC,CAAC;AAEF,MAAMC,WAAW,GAAGV,WAAW,CAAC;EAC9BW,IAAI,EAAE,QAAQ;EACdT,YAAY;EACZU,QAAQ,EAAE;IACRC,WAAWA,CAACC,KAAK,EAAEC,MAA4B,EAAE;MAC/CD,KAAK,CAACX,MAAM,CAACa,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IACnC;EACF,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACd,WAAW,CAACe,OAAO,EAAGP,KAAK,IAAK;MACvCA,KAAK,CAACV,OAAO,GAAG,IAAI;MACpBU,KAAK,CAACT,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDe,OAAO,CAACd,WAAW,CAACgB,SAAS,EAAE,CAACR,KAAK,EAAEC,MAA8B,KAAK;MACzED,KAAK,CAACV,OAAO,GAAG,KAAK;MACrBU,KAAK,CAACX,MAAM,GAAGY,MAAM,CAACE,OAAO;IAC/B,CAAC,CAAC,CACDG,OAAO,CAACd,WAAW,CAACiB,QAAQ,EAAE,CAACT,KAAK,EAAEC,MAA6B,KAAK;MACvED,KAAK,CAACV,OAAO,GAAG,KAAK;MACrBU,KAAK,CAACT,KAAK,GAAGU,MAAM,CAACE,OAAO;IAC9B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEJ;AAAY,CAAC,GAAGH,WAAW,CAACc,OAAO;AAElD,eAAed,WAAW,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}