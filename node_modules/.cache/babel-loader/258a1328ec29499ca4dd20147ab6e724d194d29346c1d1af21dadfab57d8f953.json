{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';const initialState={payments:[],loading:false,error:null};const paymentsSlice=createSlice({name:'payments',initialState,reducers:{fetchPaymentsStart(state){state.loading=true;state.error=null;},fetchPaymentsSuccess(state,action){state.loading=false;state.payments=action.payload;},fetchPaymentsFailure(state,action){state.loading=false;state.error=action.payload;},processPayment(state,action){state.payments.push(action.payload);}}});export const{fetchPaymentsStart,fetchPaymentsSuccess,fetchPaymentsFailure,processPayment}=paymentsSlice.actions;export default paymentsSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","payments","loading","error","paymentsSlice","name","reducers","fetchPaymentsStart","state","fetchPaymentsSuccess","action","payload","fetchPaymentsFailure","processPayment","push","actions","reducer"],"sources":["C:/Users/balga/OneDrive/Desktop/E-Commerce app/ecommerce-app/src/features/payments/paymentsSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface Payment {\n  payment_id: string;\n  order_id: string;\n  amount_xaf: number;\n  method: string;\n  status: string;\n  transaction_ref: string;\n}\n\ninterface PaymentsState {\n  payments: Payment[];\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: PaymentsState = {\n  payments: [],\n  loading: false,\n  error: null,\n};\n\nconst paymentsSlice = createSlice({\n  name: 'payments',\n  initialState,\n  reducers: {\n    fetchPaymentsStart(state) {\n      state.loading = true;\n      state.error = null;\n    },\n    fetchPaymentsSuccess(state, action: PayloadAction<Payment[]>) {\n      state.loading = false;\n      state.payments = action.payload;\n    },\n    fetchPaymentsFailure(state, action: PayloadAction<string>) {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    processPayment(state, action: PayloadAction<Payment>) {\n      state.payments.push(action.payload);\n    },\n  },\n});\n\nexport const {\n  fetchPaymentsStart,\n  fetchPaymentsSuccess,\n  fetchPaymentsFailure,\n  processPayment,\n} = paymentsSlice.actions;\n\nexport default paymentsSlice.reducer;"],"mappings":"AAAA,OAASA,WAAW,KAAuB,kBAAkB,CAiB7D,KAAM,CAAAC,YAA2B,CAAG,CAClCC,QAAQ,CAAE,EAAE,CACZC,OAAO,CAAE,KAAK,CACdC,KAAK,CAAE,IACT,CAAC,CAED,KAAM,CAAAC,aAAa,CAAGL,WAAW,CAAC,CAChCM,IAAI,CAAE,UAAU,CAChBL,YAAY,CACZM,QAAQ,CAAE,CACRC,kBAAkBA,CAACC,KAAK,CAAE,CACxBA,KAAK,CAACN,OAAO,CAAG,IAAI,CACpBM,KAAK,CAACL,KAAK,CAAG,IAAI,CACpB,CAAC,CACDM,oBAAoBA,CAACD,KAAK,CAAEE,MAAgC,CAAE,CAC5DF,KAAK,CAACN,OAAO,CAAG,KAAK,CACrBM,KAAK,CAACP,QAAQ,CAAGS,MAAM,CAACC,OAAO,CACjC,CAAC,CACDC,oBAAoBA,CAACJ,KAAK,CAAEE,MAA6B,CAAE,CACzDF,KAAK,CAACN,OAAO,CAAG,KAAK,CACrBM,KAAK,CAACL,KAAK,CAAGO,MAAM,CAACC,OAAO,CAC9B,CAAC,CACDE,cAAcA,CAACL,KAAK,CAAEE,MAA8B,CAAE,CACpDF,KAAK,CAACP,QAAQ,CAACa,IAAI,CAACJ,MAAM,CAACC,OAAO,CAAC,CACrC,CACF,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CACXJ,kBAAkB,CAClBE,oBAAoB,CACpBG,oBAAoB,CACpBC,cACF,CAAC,CAAGT,aAAa,CAACW,OAAO,CAEzB,cAAe,CAAAX,aAAa,CAACY,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}