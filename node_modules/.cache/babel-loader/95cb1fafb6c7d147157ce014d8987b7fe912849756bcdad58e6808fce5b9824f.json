{"ast":null,"code":"import{createSlice,createAsyncThunk}from'@reduxjs/toolkit';import axios from'axios';const initialState={products:[],status:'idle',error:null};export const fetchProducts=createAsyncThunk('products/fetchProducts',async()=>{const response=await axios.get('/api/products');return response.data;});const productsSlice=createSlice({name:'products',initialState,reducers:{setProducts(state,action){state.products=action.payload;}// Add more reducers as needed\n},extraReducers:builder=>{builder.addCase(fetchProducts.pending,state=>{state.status='loading';}).addCase(fetchProducts.fulfilled,(state,action)=>{state.status='succeeded';state.products=action.payload;}).addCase(fetchProducts.rejected,(state,action)=>{var _action$error$message;state.status='failed';state.error=(_action$error$message=action.error.message)!==null&&_action$error$message!==void 0?_action$error$message:null;});}});export const{setProducts}=productsSlice.actions;export default productsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","products","status","error","fetchProducts","response","get","data","productsSlice","name","reducers","setProducts","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","_action$error$message","message","actions","reducer"],"sources":["C:/Users/balga/OneDrive/Desktop/E-Commerce app/ecommerce-app/src/features/products/productsSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport interface Product {\n  id: number;\n  name: string;\n  category: string;\n  brand: string;\n  description: string;\n  price_ngn: number;\n  price_xaf: number;\n  stock: number;\n  image_url: string;\n}\n\ninterface ProductsState {\n  products: Product[];\n  status: 'idle' | 'loading' | 'succeeded' | 'failed';\n  error: string | null;\n}\n\nconst initialState: ProductsState = {\n  products: [],\n  status: 'idle',\n  error: null,\n};\n\nexport const fetchProducts = createAsyncThunk('products/fetchProducts', async () => {\n  const response = await axios.get('/api/products');\n  return response.data;\n});\n\nconst productsSlice = createSlice({\n  name: 'products',\n  initialState,\n  reducers: {\n    setProducts(state, action: PayloadAction<Product[]>) {\n      state.products = action.payload;\n    },\n    // Add more reducers as needed\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchProducts.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchProducts.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.products = action.payload;\n      })\n      .addCase(fetchProducts.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.error.message ?? null;\n      });\n  },\n});\n\nexport const { setProducts } = productsSlice.actions;\n\nexport default productsSlice.reducer;"],"mappings":"AAAA,OAASA,WAAW,CAAEC,gBAAgB,KAAuB,kBAAkB,CAC/E,MAAO,CAAAC,KAAK,KAAM,OAAO,CAoBzB,KAAM,CAAAC,YAA2B,CAAG,CAClCC,QAAQ,CAAE,EAAE,CACZC,MAAM,CAAE,MAAM,CACdC,KAAK,CAAE,IACT,CAAC,CAED,MAAO,MAAM,CAAAC,aAAa,CAAGN,gBAAgB,CAAC,wBAAwB,CAAE,SAAY,CAClF,KAAM,CAAAO,QAAQ,CAAG,KAAM,CAAAN,KAAK,CAACO,GAAG,CAAC,eAAe,CAAC,CACjD,MAAO,CAAAD,QAAQ,CAACE,IAAI,CACtB,CAAC,CAAC,CAEF,KAAM,CAAAC,aAAa,CAAGX,WAAW,CAAC,CAChCY,IAAI,CAAE,UAAU,CAChBT,YAAY,CACZU,QAAQ,CAAE,CACRC,WAAWA,CAACC,KAAK,CAAEC,MAAgC,CAAE,CACnDD,KAAK,CAACX,QAAQ,CAAGY,MAAM,CAACC,OAAO,CACjC,CACA;AACF,CAAC,CACDC,aAAa,CAAGC,OAAO,EAAK,CAC1BA,OAAO,CACJC,OAAO,CAACb,aAAa,CAACc,OAAO,CAAGN,KAAK,EAAK,CACzCA,KAAK,CAACV,MAAM,CAAG,SAAS,CAC1B,CAAC,CAAC,CACDe,OAAO,CAACb,aAAa,CAACe,SAAS,CAAE,CAACP,KAAK,CAAEC,MAAM,GAAK,CACnDD,KAAK,CAACV,MAAM,CAAG,WAAW,CAC1BU,KAAK,CAACX,QAAQ,CAAGY,MAAM,CAACC,OAAO,CACjC,CAAC,CAAC,CACDG,OAAO,CAACb,aAAa,CAACgB,QAAQ,CAAE,CAACR,KAAK,CAAEC,MAAM,GAAK,KAAAQ,qBAAA,CAClDT,KAAK,CAACV,MAAM,CAAG,QAAQ,CACvBU,KAAK,CAACT,KAAK,EAAAkB,qBAAA,CAAGR,MAAM,CAACV,KAAK,CAACmB,OAAO,UAAAD,qBAAA,UAAAA,qBAAA,CAAI,IAAI,CAC5C,CAAC,CAAC,CACN,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CAAEV,WAAY,CAAC,CAAGH,aAAa,CAACe,OAAO,CAEpD,cAAe,CAAAf,aAAa,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}